import { GraphQLSchema } from "graphql";
import { DirectiveConfiguration, FieldConfiguration, TypeConfiguration, TypeField } from "@wundergraph/protobuf/dist/wundernode_config";
import { Api } from "./index";
export declare const applyNameSpaceToGraphQLSchema: (schema: string, namespace?: string | undefined) => string;
export declare const applyNameSpaceToTypeFields: (fields: TypeField[], schema: GraphQLSchema, namespace?: string | undefined) => TypeField[];
export declare const applyNameSpaceToFieldConfigurations: (fields: FieldConfiguration[], schema: GraphQLSchema, namespace?: string | undefined) => FieldConfiguration[];
export declare const applyNamespaceToExistingRootFieldConfigurations: (fields: FieldConfiguration[], schema: GraphQLSchema, namespace?: string | undefined) => FieldConfiguration[];
export declare const applyNamespaceToExistingRootFieldConfigurationsWithPathRewrite: (fields: FieldConfiguration[], schema: GraphQLSchema, namespace?: string | undefined) => FieldConfiguration[];
export declare const generateTypeConfigurationsForNamespace: (schema: string, namespace?: string | undefined) => TypeConfiguration[];
export declare const generateTypeConfigurationsForNamespaceWithExisting: (schema: string, existing: TypeConfiguration[], namespace?: string | undefined) => TypeConfiguration[];
export declare const applyNamespaceToDirectiveConfiguration: (schema: GraphQLSchema, namespace?: string | undefined) => DirectiveConfiguration[];
export declare const applyNamespaceToApi: (api: Api<any>, apiNamespace: string) => Api<any>;
