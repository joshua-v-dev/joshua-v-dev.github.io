import { ClaimConfig, OperationRoleConfig, OperationType, VariableInjectionConfiguration } from "@wundergraph/protobuf/dist/wundernode_config";
import { DocumentNode, GraphQLSchema, OperationDefinitionNode } from "graphql";
import { JSONSchema7 as JSONSchema } from "json-schema";
export interface GraphQLOperation {
    Name: string;
    Content: string;
    OperationType: OperationType;
    VariablesSchema: JSONSchema;
    InjectedVariablesSchema: JSONSchema;
    InternalVariablesSchema: JSONSchema;
    ResponseSchema: JSONSchema;
    Mock?: {
        Endpoint: string;
        SubscriptionPollingInterval?: number;
    };
    CacheConfig?: {
        enable: boolean;
        public: boolean;
        maxAge: number;
        staleWhileRevalidate: number;
    };
    LiveQuery?: {
        enable: boolean;
        pollingIntervalSeconds: number;
    };
    AuthenticationConfig: {
        required: boolean;
    };
    AuthorizationConfig: {
        claims: ClaimConfig[];
        roleConfig: OperationRoleConfig;
    };
    HooksConfiguration: {
        preResolve: boolean;
        postResolve: boolean;
        mutatingPreResolve: boolean;
        mutatingPostResolve: boolean;
        mockResolve: {
            enable: boolean;
            subscriptionPollingIntervalMillis: number;
        };
    };
    VariablesConfiguration: {
        injectVariables: VariableInjectionConfiguration[];
    };
    Internal: boolean;
}
export interface ParsedOperations {
    operations: GraphQLOperation[];
}
export interface ParseOperationsOptions {
    keepFromClaimVariables?: boolean;
}
export declare const parseOperations: (graphQLSchema: string, operationsDocument: string, options?: ParseOperationsOptions) => ParsedOperations;
export declare const operationVariablesToJSONSchema: (graphQLSchema: GraphQLSchema, operation: OperationDefinitionNode, maxDepth?: number, keepInternalVariables?: boolean, keepInjectedVariables?: boolean) => JSONSchema;
export declare const operationResponseToJSONSchema: (graphQLSchema: GraphQLSchema, operationDocument: DocumentNode, operationNode: OperationDefinitionNode) => JSONSchema;
export declare const loadOperations: () => string;
export declare const removeHookVariables: (operation: string) => string;
